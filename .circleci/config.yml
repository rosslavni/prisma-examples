version: 2
jobs:
  meta:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - run: cd .github/tests && yarn && yarn test

  node:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - run: sudo yarn global add prisma
      - run: cd node/cli-app && yarn && prisma generate
      - run: cd node/graphql && yarn && prisma generate
      - run: cd node/graphql-auth && yarn && prisma generate
      - run: cd node/graphql-subscriptions && yarn && prisma generate
      - run: cd node/rest-express && yarn && prisma generate
      - run: cd node/script && yarn && prisma generate
      - run: cd node/docker-mongodb && yarn && prisma generate
      - run: cd node/docker-mysql && yarn && prisma generate
      - run: cd node/docker-postgres && yarn && prisma generate
      - run: cd node/grpc && yarn && prisma generate

  typescript:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - run: sudo yarn global add prisma
      # - run: cd typescript/circleci && yarn && yarn tsc
      - run: cd typescript/cli-app && yarn && prisma generate && yarn tsc
      - run: cd typescript/graphql && yarn && prisma generate && npx nexus-prisma-generate --client "./src/generated/prisma-client" --output "./src/generated/nexus-prisma" && yarn tsc
      - run: cd typescript/graphql-auth && yarn && prisma generate && npx nexus-prisma-generate --client "./src/generated/prisma-client" --output "./src/generated/nexus-prisma" && yarn tsc
      - run: cd typescript/graphql-subscriptions && yarn && prisma generate && yarn generate && yarn tsc
      - run: cd typescript/rest-express && yarn && prisma generate && yarn tsc
      - run: cd typescript/script && yarn && prisma generate && yarn tsc
      - run: cd typescript/docker-mongodb && yarn && prisma generate
      - run: cd typescript/docker-mysql && yarn && prisma generate
      - run: cd typescript/docker-postgres && yarn && prisma generate
      - run: cd typescript/grpc && yarn && prisma generate && yarn tsc

  flow:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - run: sudo yarn global add prisma
      - run: cd flow/graphql && yarn && prisma generate && yarn generate && yarn flow check
      # - run: cd flow/script && yarn && prisma generate && yarn flow check # typechecking is broken: https://github.com/prisma/prisma-examples/issues/373
      - run: cd flow/script && yarn && prisma generate

  go:
    docker:
      - image: circleci/golang
    working_directory: /go/src/github.com/prisma/prisma-examples
    steps:
      - checkout
      - run: curl https://s3-eu-west-1.amazonaws.com/curl-linux/prisma-1.27.3.tar.gz | tar xvz && sudo mv prisma /usr/local/bin # TODO (see https://github.com/prisma/prisma/issues/3620)
      - run: cd go/cli-app && prisma generate && dep ensure && go build
      - run: cd go/graphql && prisma generate && dep ensure && go run ./scripts/gqlgen.go && cd server && go build
      - run: cd go/http-mux && prisma generate && dep ensure && go build
      - run: cd go/rest-gin && prisma generate && dep ensure && go build
      - run: cd go/script && prisma generate && dep ensure && go build
      - run: cd go/docker-mongodb && prisma generate && dep ensure && go build
      - run: cd go/docker-mysql && prisma generate && dep ensure && go build
      - run: cd go/docker-postgres && prisma generate && dep ensure && go build

workflows:
  version: 2
  build:
    jobs:
      - meta
      - node
      - typescript
      - flow
      - go
